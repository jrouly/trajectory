"""
trajectory.py
Author: Jean Michel Rouly

This is the main executable file. Use it to call subcommands in the
application structure.
"""


from trajectory import engines, scrape, database
from argparse import ArgumentParser
import trajectory.log
import sqlite3
import sys
import os

# Constant values.
# TODO: These should be read from a configuration at some point.
PROG_NAME = "Trajectory"
PROG_DESC = "This Python application is used to acquire (scrape, clean) a dataset."
PROG_VERSION = PROG_NAME + " 0.0"


def main():
    """
    Handle basic command line argument parsing & configure logging. Route
    logic depending on what the user wants to do.
    """

    # Verify that the TRJ_HOME variable is set.
    if os.environ.get("TRJ_HOME") is None:
        print("TRJ_HOME not found. Exiting.")
        sys.exit( 1 )
    else:
        HOME = os.environ.get("TRJ_HOME")


    # Create top-level command line argument parser.
    parser = ArgumentParser(description=PROG_DESC, prog=PROG_NAME)
    parser.add_argument("--version", action="version", version=PROG_VERSION)
    parser.add_argument("--debug", action="store_true")
    parser.add_argument("--sqlite-file", help="SQLite data store location.",
            default=os.path.join(HOME, "data.db"))


    # Create arguments for scraping.
    parser.add_argument("targets", choices=engines.list(),
            nargs="+",
            help="Scraping engines.")
    parser.add_argument("--download",
            help="Download data from the Web.",
            action="store_true")
    parser.add_argument("--digest",
            help="Digest and clean local data.",
            action="store_true")


    # Parse command line arguments.
    args = parser.parse_args(sys.argv[1:])


    # Construct global logging object.
    log = trajectory.log.global_logger("root", debug=args.debug)


    # Start up program.
    log.info("Beginning trj-scrape.")


    # Initialize database connection.
    log.info("Initializing database connection.")
    db = sqlite3.connect( args.sqlite_file )
    args.db = db
    database.initialize( args )


    # Create temporary directory.
    import tempfile
    args.home = HOME
    with tempfile.TemporaryDirectory(prefix="trj_") as args.tmp_dir:

      # Hand off control flow to scraper module.
      scrape( args )


    # Exit the program.
    log.info("Exiting.")
    db.close()
    sys.exit( 0 )


if __name__ == '__main__':
    main()
